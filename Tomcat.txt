Apache Tomcat
===============

Web Server: 
 Serverd static web pages over HTTP protocal. Soon web server evolved to have CGI capabilities. t means effectively launching a process on each web request to generate dynamic content
 
Web Continer:
  Is is basically a servlet continer. A servlet container is the component of a web server that interacts with java servlets. Servlet container is the runtime environment where your servlet run and it’s life cycle is maintained.
 
Servlets:
  In Java servlet container is the runtime environment where your servlet run and it’s life cycle is maintained.
  - Servlet classes are loaded to container by it’s class loader dynamically either through lazy-loading or eager loading. 

ServletContext:
  - When the servlet container starts up, it will deploy and load all web-applications
  - When a web application gets loaded, the servlet container will create the ServletContext once per application and keep in server’s memory
  - The webapp’s web.xml will be parsed and every Servlet, Filter and Listener found in web.xml will be created once and kept in server’s memory as well. 
  - When the servlet container shuts down, it will unload all web applications and the ServletContext and all Servlet, Filter and Listener instances will be trashed.
  
  
  As per java docs, ServletContext defines a set of methods that a servlet uses to communicate with its servlet container. 
  
ServletRequest and ServletResponse  
  The servlet container is attached to a webserver which listens on HTTP requests on a certain port number, which is usually 80. When a client sends a HTTP request, the servlet container will create new HttpServletRequest and HttpServletResponse objects and pass it through the methods of the already-created Filter and Servlet instances whose URL-pattern matches the request URL, all in the same thread
  
How is session managed?
  When a client visits the web-app for the first time and/or the HttpSession is to be obtained for the first time by request.getSession(), then the servlet container will create it, generate a long and unique ID and stores it in the server's memory. 
  The servlet container will also set a Cookie in the HTTP response with JSESSIONID as cookie name and the unique session ID as cookie value.
  
  As per the HTTP Cookies Specification, the client needs to send the cookie back to the server in subsequent request as long as the cookies are valid. 
  
  
Tomcat Architecture
---------------------
Apache Tomcat is an open source webserver and servlet container. 

Standard Directory Layout
--------------------------
The following contents in your application's "document root" directory

- *.html, *.jsp, etc. 
	 The HTML and JSP pages, along with other files that must be visible to the client browser
	 
- /WEB-INF/web.xml
	 The Web Application Deployment Descriptor for your application. This is an XML file describing the servlets and other components that make up your application, along with any initialization parameters and container-managed security constraints that you want the server to enforce for you.
	 
- /WEB-INF/classes/ 
	  This directory contains any Java class files required for your application, including both servlet and non-servlet classes, that are not combined into JAR files. 
	  
- /WEB-INF/lib/  
	 This directory contains JAR files that contain Java class files required for your application, such as third party class libraries or JDBC drivers.
	 
- /META-INF/context.xml
	 This file can be used to define Tomcat specific configuration options, such as an access log, data sources, session manager configuration and more. This XML file must contain one Context element, which will be considered as if it was the child of the Host element corresponding to the Host to which the web application is being deployed. 
	 
Deployment With Tomcat
----------------------
In order to be executed, a web application must be deployed on a servlet container.  A web application can be deployed in Tomcat by one of the following approaches:

- Copy unpacked directory hierarchy into a subdirectory in directory $CATALINA_BASE/webapps/. Tomcat will assign a context path to your application based on the subdirectory name you choose. 

- Copy the web application archive file into directory $CATALINA_BASE/webapps/. When Tomcat is started, it will automatically expand the web application archive file into its unpacked form, and execute the application that way.

Refer: https://tomcat.apache.org/tomcat-9.0-doc/appdev/processes.html#Test_Your_Web_Application

 ****A Context is what Tomcat calls a web application.
 
In order to configure a Context within Tomcat a Context Descriptor is required. The location for the Context Descriptor are
- $CATALINA_BASE/conf/[enginename]/[hostname]/[webappname].xml
- $CATALINA_BASE/webapps/[webappname]/META-INF/context.xml

https://tomcat.apache.org/tomcat-9.0-doc/deployer-howto.html

